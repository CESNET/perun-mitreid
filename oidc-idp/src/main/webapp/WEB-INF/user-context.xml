<?xml version="1.0" encoding="UTF-8"?>
<!--
 Replaces (overlays) the same-name file from project org.mitre.openid-connect-server-webapp.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		">

	<context:property-placeholder properties-ref="coreProperties"/>
	<context:component-scan base-package="cz.muni.ics.oidc"/>

	<!-- default config values, override in file /etc/perun/perun-mitreid.properties -->
	<bean id="defaultCoreProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="main.oidc.issuer.url">https://perun-dev.meta.zcu.cz/oidc/</prop>
				<prop key="logo.image.url">resources/images/perun_24px.png</prop>
				<prop key="topbar.title">Perun OIDC</prop>
				<prop key="perun.rpc.url">https://perun.elixir-czech.cz/krb/rpc</prop>
				<prop key="perun.rpc.user">xxxxx</prop>
				<prop key="perun.rpc.password">yyyyy</prop>
				<prop key="jdbc.driver">org.mariadb.jdbc.Driver</prop>
				<prop key="jdbc.url">jdbc:mariadb://localhost:3306/oidc</prop>
				<prop key="jdbc.user">oidc</prop>
				<prop key="jdbc.password">oidc</prop>
				<prop key="jdbc.platform">org.eclipse.persistence.platform.database.MySQLPlatform</prop>
				<prop key="stats.jdbc.url">jdbc:mariadb://localhost:3306/STATS</prop>
				<prop key="stats.jdbc.user">user</prop>
				<prop key="stats.jdbc.password">password</prop>
				<prop key="stats.tableName.identityProviders">identityProviders</prop>
				<prop key="stats.tableName.identityProvidersMap">identityProvidersMap</prop>
				<prop key="stats.tableName.serviceProviders">serviceProviders</prop>
				<prop key="stats.tableName.serviceProvidersMap">serviceProvidersMap</prop>
				<prop key="jwk">file:///etc/perun/perun-oidc-keystore.jwks</prop>
				<prop key="admins">3197,59835</prop>
				<prop key="attribute.openid.sub">urn:perun:user:attribute-def:core:id</prop>
				<prop key="attribute.profile.preferred_username">urn:perun:user:attribute-def:def:login-namespace:einfra</prop>
				<prop key="attribute.profile.zoneinfo">urn:perun:user:attribute-def:def:timezone</prop>
				<prop key="attribute.profile.locale">urn:perun:user:attribute-def:def:preferredLanguage</prop>
				<prop key="attribute.email.email">urn:perun:user:attribute-def:def:preferredMail</prop>
				<prop key="attribute.phone.phone">urn:perun:user:attribute-def:def:phone</prop>
				<prop key="attribute.address.address.formatted">urn:perun:user:attribute-def:def:address</prop>
				<prop key="attribute.oidc.clientid">urn:perun:facility:attribute-def:def:OIDCClientID</prop>
				<prop key="attribute.oidc.checkMembership">urn:perun:facility:attribute-def:def:OIDCCheckGroupMembership</prop>
				<prop key="custom.claims">bona_fide_status,test</prop>
				<prop key="custom.claim.bona_fide_status.scope">bona_fide_status</prop>
				<prop key="custom.claim.bona_fide_status.attribute">urn:perun:user:attribute-def:def:bonaFideStatus</prop>
				<prop key="custom.claim.test.scope">bona_fide_status</prop>
				<prop key="custom.claim.test.attribute">urn:perun:user:attribute-def:core:id</prop>
				<prop key="accessTokenClaimsModifier">cz.muni.ics.oidc.PerunTokenEnhancer.NoOpAccessTokenClaimsModifier</prop>
				<prop key="web.theme">default</prop>
			</props>
		</property>
	</bean>
	<bean id="coreProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties" ref="defaultCoreProperties"/>
		<property name="locations">
			<list>
				<value>file:/etc/perun/perun-mitreid.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false"/>
	</bean>

	<!-- defines our own user data source -->
	<bean id="userInfoRepository" primary="true" class="cz.muni.ics.oidc.PerunUserInfoRepository">
		<property name="perunConnector" ref="perunConnector"/>
		<property name="subAttribute" value="${attribute.openid.sub}"/>
		<property name="preferredUsernameAttribute" value="${attribute.profile.preferred_username}"/>
		<property name="emailAttribute" value="${attribute.email.email}"/>
		<property name="addressAttribute" value="${attribute.address.address.formatted}"/>
		<property name="phoneAttribute" value="${attribute.phone.phone}"/>
		<property name="zoneinfoAttribute" value="${attribute.profile.zoneinfo}"/>
		<property name="localeAttribute" value="${attribute.profile.locale}"/>
		<property name="properties" ref="coreProperties"/>
		<property name="customClaimNames" value="#{'${custom.claims}'.split('\s*,\s*')}"/>
	</bean>

	<!-- replaces default translation service with our own for custom scope with custom claims. -->
	<bean id="scopeClaimTranslator" primary="true" class="cz.muni.ics.oidc.PerunScopeClaimTranslationService">
		<property name="perunUserInfoRepository" ref="userInfoRepository"/>
	</bean>

	<bean id="introspectionResultAssembler" class="cz.muni.ics.oidc.PerunIntrospectionResultAssembler" primary="true">
		<constructor-arg name="configBean" ref="configBean"/>
		<constructor-arg name="translator" ref="scopeClaimTranslator"/>
	</bean>

	<bean id="perunOidcConfig" class="cz.muni.ics.oidc.PerunOidcConfig">
		<property name="rpcUrl" value="${perun.rpc.url}"/>
		<property name="configBean" ref="configBean"/>
		<property name="jwk" value="${jwk}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="theme" value="${web.theme}"/>
	</bean>
	<!-- authentication -->

	<!--suppress SpringXmlModelInspection -->
	<security:http auto-config="false" use-expressions="true" entry-point-ref="http403EntryPoint"
	               authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/authorize" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		<security:custom-filter ref="perunAuthenticationFilter" before="PRE_AUTH_FILTER"/>
		<security:custom-filter ref="proxyStatisticsFilter" before="BASIC_AUTH_FILTER"/>
	</security:http>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider ref="preauthAuthProvider"/>
	</security:authentication-manager>

	<!-- the user must be pre-authenticated by Apache -->
	<bean id="preauthAuthProvider"
	      class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService" ref="userDetailsService"/>
	</bean>


	<bean id="perunTimeStamper" class="cz.muni.ics.oidc.PerunAuthenticationSuccessHandler">
	</bean>

    <bean id="accessTokenClaimsModifier" class="${accessTokenClaimsModifier}">

    </bean>
	<bean id="tokenEnhancer" class="cz.muni.ics.oidc.PerunTokenEnhancer" primary="true">
        <property name="accessTokenClaimsModifier" ref="accessTokenClaimsModifier"/>
	</bean>

	<!-- extracts user from HTTP request and looks it up in Perun-->
	<bean id="perunAuthenticationFilter" class="cz.muni.ics.oidc.PerunAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="authenticationSuccessHandler" ref="perunTimeStamper"/>
	</bean>

	<!-- Save statistics about logins -->
	<bean id="proxyStatisticsFilter" class="cz.muni.ics.oidc.filters.ProxyStatisticsFilter">
		<property name="identityProvidersTableName" value="${stats.tableName.identityProviders}"/>
		<property name="identityProvidersMapTableName" value="${stats.tableName.identityProvidersMap}"/>
		<property name="serviceProvidersTableName" value="${stats.tableName.serviceProviders}"/>
		<property name="serviceProvidersMapTableName" value="${stats.tableName.serviceProvidersMap}"/>
	</bean>

	<!-- decides who is admin -->
	<bean id="userDetailsService" class="cz.muni.ics.oidc.PerunAuthenticationUserDetailsService">
		<property name="perunConnector" ref="perunConnector"/>
		<property name="admins" value="#{'${admins}'.split('\s*,\s*')}"/>
	</bean>

	<!-- communicates with Perun -->
	<bean id="perunConnector" class="cz.muni.ics.oidc.PerunConnectorRpc">
		<property name="perunUrl" value="${perun.rpc.url}"/>
		<property name="perunUser" value="${perun.rpc.user}"/>
		<property name="perunPassword" value="${perun.rpc.password}"/>
		<property name="oidcClientIdAttr" value="${attribute.oidc.clientid}" />
		<property name="oidcCheckMembershipAttr" value="${attribute.oidc.checkMembership}"/>
	</bean>

</beans>
